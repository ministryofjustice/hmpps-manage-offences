/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/offences/load-offence-updates': {
    /** This endpoint will determine which offences have been changed since the last SDRS load and update them */
    post: operations['updateOffences']
  }
  '/offences/load-all-offences': {
    /** This endpoint will fetch all offences from SDRS and load into the manage offences DB. This will delete all existing data and reload */
    post: operations['loadAllOffences']
  }
  '/offences/load-results': {
    /** Get the results of the most recent load */
    get: operations['findLoadResults']
  }
  '/offences/code/{offenceCode}': {
    /** This endpoint will return the the offences that start with the passed offence code */
    get: operations['getOffencesByOffenceCode']
  }
}

export interface components {
  schemas: {
    /** @description Details of the load by alpha char (A to Z) */
    MostRecentLoadResult: {
      /** @description Single alphabetic character between A and Z - indicates the part of the SDRS load this status relates to */
      alphaChar: string
      /**
       * @description Load Status: SUCCESS or FAIL
       * @enum {string}
       */
      status?: 'SUCCESS' | 'FAIL'
      /**
       * @description Load Type: FULL_LOAD or UPDATE
       * @enum {string}
       */
      type?: 'FULL_LOAD' | 'UPDATE'
      /**
       * Format: date-time
       * @description The date and time of the load
       */
      loadDate?: string
      /**
       * Format: date-time
       * @description The date and time of the most recent successful load; if the load was successful this is the same as the loadDate
       */
      lastSuccessfulLoadDate?: string
    }
    /** @description Offence details */
    Offence: {
      /**
       * Format: int64
       * @description Unique ID of the offence
       */
      id: number
      /** @description The offence code */
      code?: string
      /** @description The offence description */
      description?: string
      /** @description The CJS Title (usually the same as description) */
      cjsTitle?: string
      /**
       * Format: int32
       * @description The revision number of the offence
       */
      revisionId?: number
      /**
       * Format: date
       * @description The offence start date
       */
      startDate?: string
      /**
       * Format: date
       * @description The offence end date
       */
      endDate?: string
      /** @description The offence's home office stats code */
      homeOfficeStatsCode?: string
      /**
       * Format: date-time
       * @description The date this offence was last changed in SDRS
       */
      changedDate?: string
      /**
       * Format: date-time
       * @description The date this offence was loaded into manage-offences from SDRS
       */
      loadDate?: string
    }
  }
}

export interface operations {
  /** This endpoint will determine which offences have been changed since the last SDRS load and update them */
  updateOffences: {
    responses: {
      /** OK */
      200: unknown
    }
  }
  /** This endpoint will fetch all offences from SDRS and load into the manage offences DB. This will delete all existing data and reload */
  loadAllOffences: {
    responses: {
      /** OK */
      200: unknown
    }
  }
  /** Get the results of the most recent load */
  findLoadResults: {
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['MostRecentLoadResult'][]
        }
      }
    }
  }
  /** This endpoint will return the the offences that start with the passed offence code */
  getOffencesByOffenceCode: {
    parameters: {
      path: {
        /** The offence code */
        offenceCode: string
      }
    }
    responses: {
      /** OK */
      200: {
        content: {
          'application/json': components['schemas']['Offence'][]
        }
      }
    }
  }
}
